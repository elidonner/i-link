{
    "version": 6,
    "configurePresets": [
        {
            "name": "base",
            "hidden": true,
            "generator": "Ninja",
            "binaryDir": "build.${presetName}"
        },
        {
            "name": "rtkernel",
            "inherits" : "base",
            "hidden": true,
            "toolchainFile": "$env{RTK}/cmake/toolchain/rt-kernel.cmake",
            "description": "Base target for rtkernel build. You will need to set BSP and RTK environmental variables in a child preset.",
            "environment": {
                "BSP": "",
                "RTK": ""
            },
            "cacheVariables": {
                "IOLINK_BUILD_RTKERNEL": "ON",
                "CMAKE_MODULE_PATH": "$env{RTK}/cmake",
                "CMAKE_PREFIX_PATH": "$env{RTK}/cmake/xmc4/cortex-m4f",
                "BUILD_RTK_BSP": true
            }
        },
        {
            "name": "linux",
            "inherits" : "base",
            "cacheVariables": {
                "BUILD_TESTING": true
            }
        },
        {
            "name" : "linux-usb",
            "cacheVariables" : {
                "IOLINKMASTER_USB_MODE_ENABLE": true
            },
            "inherits" : "linux"
        },
        {
            "name": "docs",
            "inherits" : "base",
            "cacheVariables": {
                "IOLINKMASTER_BUILD_DOCS": true
            }
        }
    ],
    "buildPresets": [
        {
            "name": "linux",
            "configurePreset": "linux"
        },
        {
            "name": "docs",
            "targets": "sphinx-html",
            "configurePreset": "docs"
        }
    ],
    "packagePresets": [
        {
            "name": "linux",
            "configurePreset": "linux",
            "generators": [
                "ZIP"
            ]
        }
    ],
    "testPresets": [
        {
            "name": "linux",
            "configurePreset": "linux",
            "output": {
                "outputOnFailure": true
            },
            "execution": {
                "noTestsAction": "error",
                "stopOnFailure": true
            }
        }
    ]
}
